#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  create:
    tags: '*'
  release:
    types: [published]
  push:
    branches:
      - '*'
      - '*/*'
      - '!master'
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e "${GITHUB_REF:11}.config" ] && cp "${GITHUB_REF:11}.config" openwrt/.config
        chmod +x diy.sh
        cd openwrt
        ../diy.sh
        make defconfig

    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Cache tools
      id: cache-tools
      uses: actions/cache@v1
      with:
        path: openwrt/tools
        key: tools_cache

    - name: Cache toolchain
      id: cache-toolchain
      uses: actions/cache@v1
      with:
        path: openwrt/toolchain
        key: tools_cache

    - name: Cache staging_dir
      uses: actions/cache@v1
      with:
        path: openwrt/staging_dir
        key: tools_cache

    - name: Build tools if not caching
      if: steps.cache-tools.outputs.cache-hit != 'true'
      run: |
        cd openwrt
        make tools/install -j$(nproc)

    - name: Build toolchain if not caching
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        cd openwrt
        make toolchain/install -j$(nproc)

    - name: Build image
      run: |
        cd openwrt
        make -j$(nproc) V=s

    - name : Upload artifact (targets)
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_targets
        path: openwrt/bin/targets

    - name : Upload artifact (packages)
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_packages
        path: openwrt/bin/packages